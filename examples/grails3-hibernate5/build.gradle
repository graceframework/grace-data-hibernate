group "examples"

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-logging"
    implementation "org.springframework.boot:spring-boot-autoconfigure"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-tomcat"
    implementation "jakarta.servlet:jakarta.servlet-api:$jakartaServletVersion"
    implementation "org.grails:grails-boot:$grailsVersion"
    implementation "org.grails:grails-core:$grailsVersion"
    implementation "org.grails:grails-plugin-rest:$grailsVersion"
    implementation project(":grails-plugin")

    implementation "org.hibernate:hibernate-core-jakarta:$hibernate5Version"
    implementation "org.hibernate:hibernate-ehcache:$hibernate5Version"

    runtimeOnly "com.bertramlabs.plugins:asset-pipeline-grails:$assetPipelineVersion"
    runtimeOnly "com.h2database:h2"
    runtimeOnly "org.yaml:snakeyaml:$snakeyamlVersion"
    runtimeOnly "org.apache.tomcat:tomcat-jdbc:$tomcatVersion"
    runtimeOnly "org.grails.plugins:fields:$fieldsVersion"
    runtimeOnly "org.grails.plugins:scaffolding:$scaffoldingVersion"

    testImplementation("org.grails:grails-test-support")

    testImplementation("org.grails.plugins:geb") {
        exclude group: 'org.gebish', module: 'geb-spock'
    }
    testImplementation "org.gebish:geb-spock:$gebVersion"
    testRuntimeOnly "org.seleniumhq.selenium:selenium-chrome-driver:$seleniumVersion"
    testRuntimeOnly "org.seleniumhq.selenium:selenium-firefox-driver:$seleniumVersion"
    testRuntimeOnly "org.seleniumhq.selenium:selenium-safari-driver:$seleniumSafariDriverVersion"

    testImplementation "org.seleniumhq.selenium:selenium-remote-driver:$seleniumVersion"
    testImplementation "org.seleniumhq.selenium:selenium-api:$seleniumVersion"
    testImplementation "org.seleniumhq.selenium:selenium-support:$seleniumVersion"
}
webdriverBinaries {
    chromedriver "$chromeDriverVersion"
    geckodriver "$geckodriverVersion"
}
tasks.withType(Test) {
    systemProperty "geb.env", System.getProperty('geb.env')
    systemProperty "geb.build.reportsDir", reporting.file("geb/integrationTest")
}

//compileGroovy.groovyOptions.fork = true
//compileGroovy.groovyOptions.forkOptions.jvmArgs = ['-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005']
