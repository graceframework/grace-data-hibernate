dependencies {
    api "org.slf4j:slf4j-api:$slf4jVersion"

    api "org.apache.groovy:groovy:$groovyVersion"
    api "org.graceframework:grace-datastore-gorm:$gormVersion"
    api "org.springframework:spring-orm:$springVersion"
    api("org.hibernate:hibernate-core-jakarta:$hibernate5Version") {
        exclude group:'org.dom4j', module:'dom4j'
        exclude group:'jakarta.activation', module:'jakarta.activation-api'
        exclude group:'jakarta.annotation', module:'jakarta.annotation-api'
        exclude group:'jakarta.persistence', module:'jakarta.persistence-api'
    }
    api("org.hibernate.validator:hibernate-validator:$hibernateValidatorVersion") {
        exclude group:'commons-logging', module:'commons-logging'
        exclude group:'commons-collections', module:'commons-collections'
        exclude group:'org.slf4j', module:'slf4j-api'
    }
    api("jakarta.annotation:jakarta.annotation-api:$jakartaAnnotationVersion")
    api("jakarta.validation:jakarta.validation-api:$jakartaValidationVersion")
    api("jakarta.persistence:jakarta.persistence-api:$jpaVersion")
    runtimeOnly("jakarta.el:jakarta.el-api:$jakartaElVersion")
    runtimeOnly "jakarta.xml.bind:jakarta.xml.bind-api:$jaxbApiVersion"

    compileOnly ("net.sf.ehcache:ehcache:2.10.6")
    compileOnly ("org.hibernate:hibernate-ehcache:$hibernate5Version") {
        exclude group:'net.sf.ehcache', module:'ehcache'
        exclude group:'org.hibernate', module:'hibernate-core'
    }

    testImplementation "org.apache.groovy:groovy-test-junit5:$groovyVersion"
    testImplementation "org.apache.groovy:groovy-sql:$groovyVersion"
    testImplementation "org.apache.groovy:groovy-json:$groovyVersion"
    testImplementation "org.graceframework:grace-datastore-gorm-tck:$gormVersion", {
        exclude group: "org.spockframework"
    }
    testImplementation "com.h2database:h2:$h2Version"

    testImplementation "net.sf.ehcache:ehcache:2.10.6"
    testImplementation "org.hibernate:hibernate-ehcache:$hibernate5Version"
    
    testImplementation "org.apache.tomcat:tomcat-jdbc:$tomcatVersion"
    testRuntimeOnly "org.springframework:spring-aop:$springVersion"

    testRuntimeOnly "org.slf4j:slf4j-simple:$slf4jVersion"
    testRuntimeOnly "org.slf4j:jcl-over-slf4j:$slf4jVersion"
    // The groovydoc task needs the Hibernate 4.x jars in the classpath
    documentation("org.hibernate:hibernate-core-jakarta:${hibernate5Version}")
}

test {
    if (isTravisBuild || isCiBuild) {
        maxParallelForks = 2
        forkEvery = 10
    }
    else {
        maxParallelForks = 4
        forkEvery = 20
    }

    jvmArgs = ['-Xmx1028M']
    afterSuite {
        System.out.print('.')
        System.out.flush()
    }
}
